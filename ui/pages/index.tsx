import { getKeplrFromWindow } from "@keplr-wallet/stores";
import type { NextPage } from "next";
import Head from "next/head";
import { useRecoilValueLoadable } from "recoil";
import { walletAddrSel } from "../lib/atom";
import { fmtWalletAddr } from "../lib/fmt";
import { PlusIcon } from "../public/icons/PlusIcon";

const stories: Storyline[] = [
  {
    title: "How Floob came to power",
    description:
      "A tale of mischief, cunning, and evil of the greatest villain in the Cosmos who-ever lived.",
    blocks: [
      {
        text: `In the year 2142, Floob was 
        a mere youngling of the Goober race in the Andromeda Galaxy,
        Planet 0x23df943 in the Boober system. Before he took the 
        terrifying name Floob and spread terror to the intergalaxies,
        he was known as Floobydoo of the family Floobyooby.`,
      },
      {
        text: `Floobyooby was an aristocratic family that fell
        from Imperial favor after the Oooomber Coup. Before Floob 
        came to power and banned the song, the Goobers used to 
        sing:`,
      },
    ],
  },
];

type Thread = {
  title: string;
};
const THREADS: Thread[] = [
  {
    title: "How Floob came to power",
  },
  {
    title: "How Floob grew up",
  },
  {
    title: "The Hubble Mission",
  },
];

type HeaderProps = {
  threads: Thread[];
};

const HeaderView = ({ threads }: HeaderProps) => {
  return (
    <div className="flex">
      <div className="absolute -mx-16">
        <div className="h-10 w-10 bg-cta rounded-full cursor-pointer flex items-center justify-center hover:opacity-80">
          <PlusIcon width={24} height={24} strokeWidth={2} />
        </div>
      </div>
      {threads.map((t, i) => (
        <div
          key={i}
          className="text-xl font-bold text-primary cursor-pointer hover:opacity-80 max-w-[140px] hover:underline"
        >
          {t.title}
        </div>
      ))}
    </div>
  );
};

type Storyline = {
  title: string;
  description: string;
  blocks: Block[];
};

// Would be cool to do rich text but that's going
// to be harder
type Block = {
  text: string;
};

const StorylineView = ({ storyline }: { storyline: Storyline }) => {
  const { title, description, blocks } = storyline;
  return (
    <div className="max-w-md">
      <div className="py-4">
        <p className="text-primary text-2xl font-bold">{title}</p>
        <p className="text-secondary text-xl">{description}</p>
      </div>
      <div>
        {blocks.map((block, i) => (
          <div key={i} className="relative py-2">
            {/* Decoration */}
            <div className="absolute flex gap-4 items-baseline -ml-36 top-0 left-0 my-3">
              <div className="text-cta font-semibold text-base cursor-pointer hover:opacity-80">
                juno03f...49l
              </div>
              <span className="relative flex h-2 w-2">
                <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-white opacity-75"></span>
                <span className="relative inline-flex rounded-full h-2 w-2 bg-white"></span>
              </span>
            </div>
            <div className="pb-1 leading-relaxed">{block.text}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

const CHAIN_ID = "juno-1";

const onConnectWalletClick = async () => {
  const keplr = await getKeplrFromWindow();
  if (!keplr)
    return alert("Connect wallet failed. Download Keplr wallet to continue");

  await keplr.enable(CHAIN_ID);
};

const Home: NextPage = () => {
  const { state, contents: walletAddr } = useRecoilValueLoadable(walletAddrSel);

  return (
    <div>
      <Head>
        <title>Floob DAO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="py-2">
        <div className="w-full flex items-center justify-center">
          <div className="flex flex-col">
            <div className="flex py-12">
              <div>
                <HeaderView threads={THREADS} />
              </div>
            </div>
            <StorylineView storyline={stories[0]} />
            {/* Add new sub-thread */}
            <div className="py-4 relative">
              <div className="absolute -ml-36 my-3 flex items-baseline gap-4 top-0 left-0">
                <div
                  className="text-cta font-semibold text-base cursor-pointer hover:opacity-80"
                  onClick={walletAddr ? undefined : onConnectWalletClick}
                >
                  {state == "hasValue" ? (
                    <div>
                      <p>{fmtWalletAddr(walletAddr as string)}</p>
                      <p>(Your wallet)</p>
                    </div>
                  ) : (
                    "Connect wallet"
                  )}
                </div>
                <span className="relative flex h-2 w-2">
                  <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-white opacity-75"></span>
                  <span className="relative inline-flex rounded-full h-2 w-2 bg-white"></span>
                </span>
              </div>
              {/* Input component */}
              <div className="bg-[#1E1E1E] rounded-md">
                <textarea
                  cols={40}
                  rows={2}
                  placeholder="New subthread story..."
                  className="w-full bg-[#1E1E1E] rounded-sm px-6 py-4 outline-none"
                />
                <div className="px-6 py-4">
                  <input
                    type="button"
                    value="Post"
                    className="text-cta text-sm font-semibold rounded-sm outline-none cursor-pointer hover:opacity-80"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className="py-24"></div>
    </div>
  );
};

export default Home;
